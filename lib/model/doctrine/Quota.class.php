<?php
/*
 * Copyright (c) 2016, webvariants GmbH <?php Co. KG, http://www.webvariants.de
 *
 * This file is released under the terms of the MIT license. You can find the
 * complete text in the attached LICENSE file or online at:
 *
 * http://www.opensource.org/licenses/mit-license.php
 */

/**
 * Quota
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Quota extends BaseQuota {

  public function getPercent() {
    if ($this->getEmails() != 0) {
      return 100 - ceil(100 * $this->getEmailsRemaining() / $this->getEmails());
    }

    return null;
  }

  public function getPercentLeft() {
    if ($this->getEmails() > 0 && $this->getEmailsRemaining() > 0) {
      return floor(100 * $this->getEmailsRemaining() / $this->getEmails());
    }

    return 0;
  }

  public function copyProduct(Product $product) {
    $this->setName($product->getName());
    $this->setEmails($product->getEmails());
    $this->setEmailsRemaining($product->getEmails());
    $this->setStatus(QuotaTable::STATUS_ORDER);
    $this->setPrice($product->getPrice());
    $this->setDays($product->getDays());
    $this->setProduct($product);
    if (StoreTable::value(StoreTable::BILLING_SUBSCRIPTION_ENABLE)) {
        $this->setSubscription($product->getSubscription());
    }
  }

  public function getEmailsDone() {
    return $this->getEmails() - $this->getEmailsRemaining();
  }

  public function getPriceBrutto($tax) {
    return round($this->getPrice() * ($tax + 100) / 100, 2);
  }

  public function getPriceTax($tax) {
    return round($this->getPrice() * ($tax) / 100, 2);
  }

  public function isInTime($time = null) {
    if ($time === null) {
      $time = time();
    }

    $sqltime = gmdate('Y-m-d', $time);

    return $this->getStartAt() <= $sqltime && $sqltime <= $this->getEndAt();
  }

  public function isActiveOne() {
    return $this->getCampaignId() && ($this->getCampaign()->getQuotaId() == $this->getId());
  }

  public function getStatusName() {
    $status = $this->getStatus();
    $suffix = '';

    if ($status == QuotaTable::STATUS_ACTIVE) {
      $suffix .=!$this->isInTime() ? ' but over' : '';
      $suffix .= $this->getEmailsRemaining() <= 0 ? ' but none left' : '';

      if ($this->isActiveOne()) {
        $suffix .= '*';
      }
    }

    return QuotaTable::$STATUS_SHOW[$status] . $suffix;
  }

  public function daysLeft($time = null) {
    if ($time === null) {
      $time = time();
    }

    $end = strtotime($this->getEndAt());
    return ceil(($end - $time) / 122400);
  }

  public function subscriptionRenewPossible() {
    if (!$this->getSubscription() || $this->getRenewOfferred() || $this->getCampaign()->getOrderId() || !$this->getProductId() || !$this->getProduct()->getSubscription()) {
        return false;
    }

    $days = StoreTable::value(StoreTable::BILLING_SUBSCRIPTION_LEFT_DAYS);
    $percent = StoreTable::value(StoreTable::BILLING_SUBSCRIPTION_LEFT_PERCENT);
    if ($days > 0 && $this->daysLeft() <= $days) {
      return true;
    }
    if ($percent > 0 && $this->getPercentLeft() <= $percent) {
      return true;
    }

    return false;
  }
}
